/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  BasicWhitelisting,
  BasicWhitelistingInterface,
} from "../../../../hardhat/contracts/whitelisting/BasicWhitelisting";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressRemovedFromWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressWhitelisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addWhitelistedAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "isWhitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeWhitelistedAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b506100193361001e565b61006d565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6105858061007a5f395ff3fe608060405234801561000f575f80fd5b506004361061007a575f3560e01c8063715018a611610058578063715018a6146100ce578063830639ac146100d65780638da5cb5b1461010f578063f2fde38b14610136575f80fd5b806301ffc9a71461007e57806329975b43146100a6578063530cd5ab146100bb575b5f80fd5b61009161008c3660046104a0565b610149565b60405190151581526020015b60405180910390f35b6100b96100b436600461050e565b6101e1565b005b6100b96100c936600461050e565b610262565b6100b96102dd565b6100916100e4366004610527565b5073ffffffffffffffffffffffffffffffffffffffff165f9081526001602052604090205460ff1690565b5f5460405173ffffffffffffffffffffffffffffffffffffffff909116815260200161009d565b6100b961014436600461050e565b6102f0565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082167f830639ac0000000000000000000000000000000000000000000000000000000014806101db57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6101e96103ac565b73ffffffffffffffffffffffffffffffffffffffff81165f81815260016020819052604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016909217909155517f4f783c179409b4127238bc9c990bc99b9a651666a0d20b51d6c42849eb88466d9190a250565b61026a6103ac565b73ffffffffffffffffffffffffffffffffffffffff81165f8181526001602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055517f535611fb62fa2a833988f283b779e417e996813e44046f521d76c17b5943b08c9190a250565b6102e56103ac565b6102ee5f61042c565b565b6102f86103ac565b73ffffffffffffffffffffffffffffffffffffffff81166103a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6103a98161042c565b50565b5f5473ffffffffffffffffffffffffffffffffffffffff1633146102ee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610397565b5f805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602082840312156104b0575f80fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146104df575f80fd5b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610509575f80fd5b919050565b5f6020828403121561051e575f80fd5b6104df826104e6565b5f8060408385031215610538575f80fd5b610541836104e6565b94602093909301359350505056fea26469706673582212201c7fda22644de6e85ff5ceffd8ee1ceeaa3c163d61dd8c6aa2a163ed66d019eb64736f6c63430008180033";

type BasicWhitelistingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BasicWhitelistingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BasicWhitelisting__factory extends ContractFactory {
  constructor(...args: BasicWhitelistingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BasicWhitelisting & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BasicWhitelisting__factory {
    return super.connect(runner) as BasicWhitelisting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BasicWhitelistingInterface {
    return new Interface(_abi) as BasicWhitelistingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BasicWhitelisting {
    return new Contract(address, _abi, runner) as unknown as BasicWhitelisting;
  }
}
