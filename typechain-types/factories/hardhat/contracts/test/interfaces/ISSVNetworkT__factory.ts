/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ISSVNetworkT,
  ISSVNetworkTInterface,
} from "../../../../../hardhat/contracts/test/interfaces/ISSVNetworkT";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token_",
        type: "address",
      },
      {
        internalType: "contract ISSVOperators",
        name: "ssvOperators_",
        type: "address",
      },
      {
        internalType: "contract ISSVClusters",
        name: "ssvClusters_",
        type: "address",
      },
      {
        internalType: "contract ISSVDAO",
        name: "ssvDAO_",
        type: "address",
      },
      {
        internalType: "contract ISSVViews",
        name: "ssvViews_",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "minimumBlocksBeforeLiquidation_",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "minimumLiquidationCollateral_",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "validatorsPerOperatorLimit_",
        type: "uint32",
      },
      {
        internalType: "uint64",
        name: "declareOperatorFeePeriod_",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "executeOperatorFeePeriod_",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "operatorMaxFeeIncrease_",
        type: "uint64",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "feeRecipientAddress",
        type: "address",
      },
    ],
    name: "setFeeRecipientAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ISSVNetworkT__factory {
  static readonly abi = _abi;
  static createInterface(): ISSVNetworkTInterface {
    return new Interface(_abi) as ISSVNetworkTInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ISSVNetworkT {
    return new Contract(address, _abi, runner) as unknown as ISSVNetworkT;
  }
}
